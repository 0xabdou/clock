{"version":3,"sources":["store/rootReducer.ts","features/clock/painter.ts","features/clock/Clock.tsx","features/clock/Button.tsx","features/clock/Card.tsx","assets/beep.mp3","features/clock/Beep.tsx","app/App.tsx","features/clock/timer.ts","reportWebVitals.ts","store/store.ts","index.tsx"],"names":["Counting","CountdownType","mToS","m","initialState","sessionLength","breakLength","countdownType","session","counting","reset","currentTime","rootSlice","createSlice","name","reducers","toggle","state","started","paused","incrementSessionLength","decrementSessionLength","incrementBreakLength","break","decrementBreakLength","countdown","actions","pLength","percent","CLOCK_LENGTH","BACKGROUND_COLOR","formatTime","s","Math","floor","minutes","slice","seconds","Clock","useSelector","bgRef","useRef","pRef","useState","useEffect","ctx","current","getContext","moveTo","drawCircle","radius","whiteShadowOffset","blackShadowOffset","drawArc","arc","PI","shadowBlur","fillStyle","beginPath","shadowOffsetX","shadowOffsetY","shadowColor","fill","drawBackground","strokeStyle","offset","tickHeight","rotationStep","i","lineTo","translate","rotate","stroke","drawTicks","length","rotationPercent","clearRect","save","pointerRadius","pink","centerX","centerY","pointerGrad","createLinearGradient","addColorStop","restore","drawPointer","id","ref","width","height","Button","label","color","active","onClick","style","className","Buttons","dispatch","useDispatch","startActive","console","log","Card","props","title","subtitle","icon","faAngleUp","onClickUp","faAngleDown","onClickDown","Cards","shallowEqual","Beep","prevCountdownType","setPrevCountdownType","play","catch","_","pause","src","beep","type","App","timer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","timerMiddleware","store","next","action","getState","clearInterval","setInterval","configureStore","reducer","rootReducer","middleware","getDefaultMiddleware","concat","ReactDOM","render","StrictMode","document","getElementById","setHeight","a","doc","documentElement","clientHeight","vh","setProperty","window","addEventListener","onload","mobile_timer","viewport","navigator","userAgent","match","setAttribute","clearTimeout","setTimeout"],"mappings":"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","file":"static/js/main.3321e568.chunk.js","sourcesContent":["import {createSlice} from \"@reduxjs/toolkit\";\n\n\nconst mToS = (m: number) => m * 60;\n\nexport enum Counting {\n  started, paused, reset,\n}\n\nexport enum CountdownType {\n  session,\n  break\n}\n\ntype RootState = {\n  sessionLength: number;\n  breakLength: number;\n  countdownType: CountdownType;\n  counting: Counting;\n  currentTime: number;\n};\n\nconst initialState: RootState = {\n  sessionLength: mToS(25),\n  breakLength: mToS(5),\n  countdownType: CountdownType.session,\n  counting: Counting.reset,\n  currentTime: mToS(25),\n};\n\nconst rootSlice = createSlice({\n  name: 'root',\n  initialState,\n  reducers: {\n    toggle(state) {\n      if (state.counting === Counting.started) {\n        state.counting = Counting.paused;\n      } else {\n        state.counting = Counting.started;\n      }\n    },\n    reset(state) {\n      state.counting = initialState.counting;\n      state.breakLength = initialState.breakLength;\n      state.sessionLength = initialState.sessionLength;\n      state.currentTime = initialState.currentTime;\n      state.countdownType = initialState.countdownType;\n    },\n    incrementSessionLength(state) {\n      if (state.counting === Counting.started) return;\n      if (state.sessionLength === mToS(60)) return;\n      state.sessionLength += 60;\n      if (state.countdownType === CountdownType.session) {\n        state.currentTime = state.sessionLength;\n      }\n    },\n    decrementSessionLength(state) {\n      if (state.counting === Counting.started) return;\n      if (state.sessionLength === mToS(1)) return;\n      state.sessionLength -= 60;\n      if (state.countdownType === CountdownType.session) {\n        state.currentTime = state.sessionLength;\n      }\n    },\n    incrementBreakLength(state) {\n      if (state.counting === Counting.started) return;\n      if (state.breakLength === mToS(60)) return;\n      state.breakLength += 60;\n      if (state.countdownType === CountdownType.break) {\n        state.currentTime = state.breakLength;\n      }\n    },\n    decrementBreakLength(state) {\n      if (state.counting === Counting.started) return;\n      if (state.breakLength === mToS(1)) return;\n      state.breakLength -= 60;\n      if (state.countdownType === CountdownType.break) {\n        state.currentTime = state.breakLength;\n      }\n    },\n    countdown(state) {\n      state.currentTime -= 1;\n      if (state.currentTime < 0) {\n        if (state.countdownType === CountdownType.session) {\n          state.countdownType = CountdownType.break;\n          state.currentTime = state.breakLength;\n        } else {\n          state.countdownType = CountdownType.session;\n          state.currentTime = state.sessionLength;\n        }\n      }\n    },\n  }\n});\n\n\nexport const {\n  toggle, reset, countdown,\n  incrementSessionLength, decrementSessionLength,\n  incrementBreakLength, decrementBreakLength,\n} = rootSlice.actions;\n\nexport default rootSlice.reducer;\n","import {BACKGROUND_COLOR, CLOCK_LENGTH} from \"./Clock\";\n\nconst pLength = (percent: number) => CLOCK_LENGTH / 100 * percent;\n\nconst drawTicks = (ctx: CanvasRenderingContext2D) => {\n  ctx.beginPath();\n  ctx.strokeStyle = 'rgba(255, 255, 255, 0.5)';\n  const offset = pLength(9);\n  const tickHeight = pLength(2);\n  const tickNum = 100;\n  const rotationStep = Math.PI * 2 / tickNum;\n  for (let i = 0; i < tickNum; i++) {\n    ctx.moveTo(CLOCK_LENGTH / 2, offset);\n    ctx.lineTo(CLOCK_LENGTH / 2, offset + tickHeight);\n    ctx.translate(CLOCK_LENGTH / 2, CLOCK_LENGTH / 2);\n    ctx.rotate(rotationStep);\n    ctx.translate(-CLOCK_LENGTH / 2, -CLOCK_LENGTH / 2);\n  }\n  ctx.stroke();\n};\n\nconst drawBackground = (ctx: CanvasRenderingContext2D) => {\n  ctx.moveTo(CLOCK_LENGTH / 2, CLOCK_LENGTH / 2);\n\n  const drawCircle = (radius: number) => {\n    const whiteShadowOffset = -pLength(0.5);\n    const blackShadowOffset = pLength(2);\n\n    const drawArc = (radius: number) => {\n      ctx.arc(CLOCK_LENGTH / 2, CLOCK_LENGTH / 2, pLength(radius), 0, Math.PI * 2);\n    };\n\n    ctx.shadowBlur = 15;\n    ctx.fillStyle = BACKGROUND_COLOR;\n\n    ctx.beginPath();\n    ctx.shadowOffsetX = ctx.shadowOffsetY = blackShadowOffset;\n    ctx.shadowColor = 'rgba(0, 0, 0, 0.8)';\n    drawArc(radius);\n    ctx.fill();\n\n    ctx.beginPath();\n    ctx.shadowOffsetX = ctx.shadowOffsetY = whiteShadowOffset;\n    ctx.shadowColor = 'rgba(255, 255, 255, 0.2)';\n    drawArc(radius);\n    ctx.fill();\n\n\n  };\n\n  // draw outer circle\n  drawCircle(45);\n  // draw middle circle\n  drawCircle(35);\n\n  ctx.beginPath();\n  ctx.arc(CLOCK_LENGTH / 2, CLOCK_LENGTH / 2, pLength(25), 0, Math.PI * 2);\n  ctx.fillStyle = '#161719';\n  ctx.shadowOffsetX = 0;\n  ctx.shadowOffsetY = 0;\n  ctx.shadowColor = 'rgba(0,0,0,0.5)';\n  ctx.shadowBlur = 5;\n  ctx.fill();\n};\n\nconst drawPointer = (ctx: CanvasRenderingContext2D, rotationPercent: number) => {\n  if (ctx == null) return;\n  ctx.clearRect(0, 0, CLOCK_LENGTH, CLOCK_LENGTH);\n\n  ctx.save();\n  ctx.translate(CLOCK_LENGTH / 2, CLOCK_LENGTH / 2);\n  ctx.rotate(-Math.PI * 2 * rotationPercent);\n  ctx.translate(-CLOCK_LENGTH / 2, -CLOCK_LENGTH / 2);\n\n\n  ctx.shadowColor = 'transparent';\n  const pointerRadius = pLength(2);\n  const pink = 'rgb(211, 105, 190)';\n  const lightPink = 'rgb(209, 133, 194)';\n  const centerX = CLOCK_LENGTH / 2;\n  const centerY = pLength(15);\n\n  ctx.beginPath();\n  ctx.arc(centerX, centerY, pointerRadius, 0, Math.PI * 2);\n  ctx.fillStyle = pink;\n  ctx.fill();\n\n  ctx.beginPath();\n  const pointerGrad = ctx.createLinearGradient(\n    centerX - pointerRadius, centerY, centerX + pointerRadius, centerY\n  );\n  pointerGrad.addColorStop(0, pink);\n  pointerGrad.addColorStop(0.5, pink);\n  pointerGrad.addColorStop(1, lightPink);\n  ctx.fillStyle = pointerGrad;\n  ctx.arc(centerX, centerY, pointerRadius, 0, Math.PI * 2);\n  ctx.fill();\n  ctx.restore();\n};\n\nexport {drawBackground, drawTicks, drawPointer};","import './Clock.scss';\nimport {useEffect, useRef, useState} from \"react\";\nimport {RootState} from \"../../store/store\";\nimport {useSelector} from \"react-redux\";\nimport {CountdownType} from \"../../store/rootReducer\";\nimport {drawBackground, drawPointer, drawTicks} from \"./painter\";\n\n\nexport const CLOCK_LENGTH = 300;\nexport const BACKGROUND_COLOR = '#222326';\n\n\nconst formatTime = (s: number) => {\n  const m = Math.floor(s / 60);\n  s -= m * 60;\n  //s = Math.floor(s / 10);\n  const minutes = ('0' + m).slice(-2);\n  const seconds = ('0' + s).slice(-2);\n  //const millis = ('0' + s).slice(-2);\n  //return `${minutes}:${seconds}:${millis}`;\n  return `${minutes}:${seconds}`;\n};\n\n\nconst Clock = () => {\n  const state = useSelector((state: RootState) => state);\n  const bgRef = useRef<HTMLCanvasElement>(null);\n  const pRef = useRef<HTMLCanvasElement>(null);\n  const [, rerender] = useState(1);\n\n  useEffect(() => {\n    const ctx = bgRef.current?.getContext('2d');\n    if (ctx) {\n      drawBackground(ctx);\n      drawTicks(ctx);\n    }\n  }, []);\n\n  useEffect(() => {\n    const length = state.countdownType === CountdownType.session ? state.sessionLength : state.breakLength;\n    const percent = state.currentTime / length;\n    const ctx = pRef.current?.getContext('2d');\n    if (ctx) drawPointer(ctx, percent);\n  });\n\n  return (\n    <div id='clock-container'>\n      <canvas ref={bgRef} id='clock' width={`${CLOCK_LENGTH}px`} height={`${CLOCK_LENGTH}px`}/>\n      <span id='time-left'>{formatTime(state.currentTime)}</span>\n      <canvas ref={pRef} id='pointer' width={`${CLOCK_LENGTH}px`} height={`${CLOCK_LENGTH}px`}/>\n      <span id='timer-label'>{state.countdownType === CountdownType.session ? 'session' : 'break'}</span>\n    </div>\n  );\n};\n\nexport default Clock;\n\n","import './Button.scss';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {RootState} from \"../../store/store\";\nimport {Counting, reset, toggle} from '../../store/rootReducer';\n\nconst Buttons = () => {\n  const counting = useSelector((state: RootState) => state.counting);\n  const dispatch = useDispatch();\n\n  const startPause = () => {\n    dispatch(toggle());\n  };\n\n  const resetTimer = () => {\n    dispatch(reset());\n  };\n\n  const startActive = counting === Counting.started;\n  console.log(counting);\n  return (\n    <div id='buttons'>\n      <Button id='start_stop' label='START' color='#7A63FC' active={startActive} onClick={startPause}/>\n      <Button id='reset' label='RESET' color='#E44B4C' onClick={resetTimer}/>\n    </div>\n  );\n};\n\ntype ButtonProps = {\n  label: string,\n  onClick: () => void,\n  color?: string,\n  active?: boolean,\n  id: string,\n}\n\nconst Button = ({id, label, color = 'white', active = false, onClick}: ButtonProps) => {\n  return (\n    <button\n      id={id}\n      style={{color}}\n      className={`nice-button ${active ? 'active' : ''}`}\n      onClick={onClick}\n    >\n      {label}\n    </button>\n  );\n};\n\nexport default Buttons;","import './Card.scss';\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faAngleDown, faAngleUp} from \"@fortawesome/free-solid-svg-icons\";\nimport {shallowEqual, useDispatch, useSelector} from \"react-redux\";\nimport {RootState} from \"../../store/store\";\nimport {\n  decrementBreakLength,\n  decrementSessionLength,\n  incrementBreakLength,\n  incrementSessionLength\n} from '../../store/rootReducer';\n\nconst Cards = () => {\n  const incBL = () => {\n    dispatch(incrementBreakLength());\n  };\n\n  const decBL = () => {\n    dispatch(decrementBreakLength());\n  };\n\n  const incSL = () => {\n    dispatch(incrementSessionLength());\n  };\n\n  const decSL = () => {\n    dispatch(decrementSessionLength());\n  };\n\n  const {breakLength, sessionLength} = useSelector((state: RootState) => ({\n    breakLength: state.breakLength, sessionLength: state.sessionLength,\n  }), shallowEqual);\n  const dispatch = useDispatch();\n\n  return (\n    <div id='cards'>\n      <Card id='break' title='BREAK LENGTH' subtitle={`${breakLength / 60}`} onClickDown={decBL} onClickUp={incBL}/>\n      <Card id='session' title='SESSION LENGTH' subtitle={`${sessionLength / 60}`} onClickDown={decSL} onClickUp={incSL}/>\n    </div>\n  );\n};\n\ntype CardProps = {\n  title: string,\n  subtitle: string,\n  onClickUp: () => void,\n  onClickDown: () => void,\n  id: string,\n};\n\nconst Card = (props: CardProps) => {\n\n  return (\n    <div className='card'>\n      <div id={props.id + '-label'} className='title'>{props.title}</div>\n      <div id={props.id + '-length'} className='subtitle'>{props.subtitle}</div>\n      <div className='card-buttons'>\n        <FontAwesomeIcon id={props.id + '-increment'} className='card-button' icon={faAngleUp}\n                         onClick={props.onClickUp}/>\n        <FontAwesomeIcon id={props.id + '-decrement'} className='card-button' icon={faAngleDown}\n                         onClick={props.onClickDown}/>\n      </div>\n    </div>\n  );\n};\n\nexport default Cards;","export default __webpack_public_path__ + \"static/media/beep.a21d0d20.mp3\";","import beep from \"../../assets/beep.mp3\";\nimport {useEffect, useRef, useState} from 'react';\nimport {RootState} from \"../../store/store\";\nimport {CountdownType, Counting} from \"../../store/rootReducer\";\nimport {shallowEqual, useSelector} from \"react-redux\";\n\nconst Beep = () => {\n  const ref = useRef<HTMLAudioElement>(null);\n  const [prevCountdownType, setPrevCountdownType] = useState<CountdownType>();\n  const {countdownType, counting} = useSelector((state: RootState) => ({\n    countdownType: state.countdownType, counting: state.counting,\n  }), shallowEqual);\n\n  useEffect(() => {\n    if (!prevCountdownType) {\n      setPrevCountdownType(countdownType);\n    }\n    if (countdownType !== prevCountdownType) {\n      ref.current?.play().catch((_) => console.log(\"Couldn't play beep\"));\n      setPrevCountdownType(countdownType);\n    }\n    if (counting === Counting.reset) {\n      if (ref.current) {\n        ref.current.pause();\n        ref.current.currentTime = 0;\n      }\n    }\n  }, [countdownType, prevCountdownType, counting]);\n\n  console.log('YO ', prevCountdownType, countdownType);\n  return (\n    <audio id='beep' ref={ref}>\n      <source src={beep} type='audio/mp3'/>\n    </audio>\n  );\n};\n\nexport default Beep;","import './App.scss';\nimport Clock from \"../features/clock/Clock\";\nimport Buttons from \"../features/clock/Button\";\nimport Cards from \"../features/clock/Card\";\nimport Beep from \"../features/clock/Beep\";\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Clock/>\n      <Cards/>\n      <Buttons/>\n      <Beep/>\n    </div>\n  );\n}\n\n\nexport default App;\n","import {Middleware} from 'redux';\nimport {RootState} from \"../../store/store\";\nimport {PayloadAction} from \"@reduxjs/toolkit\";\nimport {countdown, Counting, reset, toggle} from '../../store/rootReducer';\n\nlet timer: NodeJS.Timeout;\n\nconst timerMiddleware: Middleware<{}, RootState> = store => next => (action: PayloadAction) => {\n  if (action.type === toggle.type) {\n    if (store.getState().counting === Counting.started) {\n      if (timer) clearInterval(timer);\n    } else {\n      timer = setInterval(() => {\n        store.dispatch(countdown());\n      }, 1000);\n    }\n  } else if (action.type === reset.type) {\n    if (timer) clearInterval(timer);\n  }\n  next(action);\n};\n\nexport default timerMiddleware;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {configureStore} from \"@reduxjs/toolkit\";\nimport rootReducer from './rootReducer';\nimport timerMiddleware from \"../features/clock/timer\";\n\nconst store = configureStore({\n  reducer: rootReducer,\n  middleware: getDefaultMiddleware => getDefaultMiddleware().concat(\n    timerMiddleware,\n  ),\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './app/App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport store from \"./store/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App/>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nconst setHeight = async () => {\n  const doc = document.documentElement;\n  const height = doc.clientHeight;\n  const vh = height / 100;\n  doc.style.setProperty('--vh', `${vh}px`);\n};\n\n//window.addEventListener('resize', setHeight);\nwindow.addEventListener('resize', setHeight);\n\nsetHeight();\n\nconst lol = () => {\n  let mobile_timer: NodeJS.Timeout;\n\n  const viewport = document.getElementById('viewport');\n  if (viewport == null) return;\n\n  if (navigator.userAgent.match(/iPhone/i)) {\n    viewport.setAttribute('content', 'width=device-width,minimum-scale=1.0,maximum-scale=1.0,initial-scale=1.0');\n    window.addEventListener('gesturestart', function () {\n      clearTimeout(mobile_timer);\n      viewport.setAttribute('content', 'width=device-width,minimum-scale=1.0,maximum-scale=10.0');\n    }, false);\n    window.addEventListener('touchend', function () {\n      clearTimeout(mobile_timer);\n      mobile_timer = setTimeout(function () {\n        viewport.setAttribute('content', 'width=device-width,minimum-scale=1.0,maximum-scale=1.0,initial-scale=1.0');\n      }, 1000);\n    }, false);\n  }\n};\n\nwindow.onload = lol;\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}