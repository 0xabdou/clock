{"version":3,"sources":["store/rootReducer.ts","features/clock/Clock.tsx","store/store.ts","features/clock/painter.ts","assets/beep.mp3","features/clock/Button.tsx","features/clock/Card.tsx","app/App.tsx","reportWebVitals.ts","index.tsx"],"names":["Counting","CountdownType","initialState","sessionLength","breakLength","counting","reset","rootSlice","createSlice","name","reducers","start","state","started","pause","paused","incrementSessionLength","decrementSessionLength","incrementBreakLength","decrementBreakLength","actions","store","configureStore","reducer","rootReducer","pLength","percent","CLOCK_LENGTH","drawPointer","ctx","rotationPercent","clearRect","save","translate","rotate","Math","PI","shadowColor","pointerRadius","pink","centerX","centerY","beginPath","arc","fillStyle","fill","pointerGrad","createLinearGradient","addColorStop","restore","BACKGROUND_COLOR","timer","mToMS","m","formatTime","ms","floor","s","minutes","slice","seconds","currentSessionLength","getState","currentBreakLength","currentTime","currentTimeLength","currentCountdownType","session","prevCounting","Clock","useState","rerender","useEffect","subscribe","aRef","current","break","setInterval","play","catch","err","console","log","clearInterval","bgRef","getContext","moveTo","drawCircle","radius","whiteShadowOffset","blackShadowOffset","drawArc","shadowBlur","shadowOffsetX","shadowOffsetY","drawBackground","strokeStyle","offset","tickHeight","rotationStep","i","lineTo","stroke","drawTicks","ctx2","pRef","useRef","id","ref","width","height","src","beep","type","Button","label","color","active","onClick","style","className","Buttons","useSelector","dispatch","useDispatch","Card","props","title","subtitle","icon","faAngleUp","onClickUp","faAngleDown","onClickDown","Cards","shallowEqual","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","setHeight","a","doc","documentElement","clientHeight","window","innerWidth","vh","setProperty","addEventListener","onload","mobile_timer","viewport","navigator","userAgent","match","setAttribute","clearTimeout","setTimeout"],"mappings":"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","file":"static/js/main.214c08fb.chunk.js","sourcesContent":["import {createSlice} from \"@reduxjs/toolkit\";\n\n\nexport enum Counting {\n  started, paused, reset,\n}\n\n\ntype RootState = {\n  sessionLength: number;\n  breakLength: number;\n  counting: Counting;\n};\n\nconst initialState: RootState = {\n  sessionLength: 25,\n  breakLength: 5,\n  counting: Counting.reset,\n};\n\nconst rootSlice = createSlice({\n  name: 'root',\n  initialState,\n  reducers: {\n    start(state) {\n      state.counting = Counting.started;\n    },\n    pause(state) {\n      state.counting = Counting.paused;\n    },\n    reset(state) {\n      state.counting = Counting.reset;\n      state.breakLength = initialState.breakLength;\n      state.sessionLength = initialState.sessionLength;\n    },\n    incrementSessionLength(state) {\n      if (state.counting === Counting.started) return;\n      if (state.sessionLength === 60) return;\n      state.sessionLength++;\n    },\n    decrementSessionLength(state) {\n      if (state.counting === Counting.started) return;\n      if (state.sessionLength === 1) return;\n      state.sessionLength--;\n    },\n    incrementBreakLength(state) {\n      if (state.counting === Counting.started) return;\n      if (state.breakLength === 60) return;\n      state.breakLength++;\n    },\n    decrementBreakLength(state) {\n      if (state.counting === Counting.started) return;\n      if (state.breakLength === 1) return;\n      state.breakLength--;\n    },\n  }\n});\n\n\nexport const {\n  start, pause, reset,\n  incrementSessionLength, decrementSessionLength,\n  incrementBreakLength, decrementBreakLength,\n} = rootSlice.actions;\n\nexport default rootSlice.reducer;\n","import './Clock.scss';\nimport {useEffect, useRef, useState} from \"react\";\nimport store from \"../../store/store\";\nimport {Counting} from \"../../store/rootReducer\";\nimport {drawBackground, drawPointer, drawTicks} from \"./painter\";\n\nimport beep from '../../assets/beep.mp3';\n\n\nexport const CLOCK_LENGTH = 300;\nexport const BACKGROUND_COLOR = '#222326';\n\nenum CountdownType {\n  session,\n  break\n}\n\nconst mToMS = (m: number) => m * 60 * 1000;\n\nconst formatTime = (ms: number) => {\n  const m = Math.floor(ms / 1000 / 60);\n  ms -= m * 60 * 1000;\n  const s = Math.floor(ms / 1000);\n  ms -= s * 1000;\n  //ms = Math.floor(ms / 10);\n  const minutes = ('0' + m).slice(-2);\n  const seconds = ('0' + s).slice(-2);\n  //const millis = ('0' + ms).slice(-2);\n  //return `${minutes}:${seconds}:${millis}`;\n  return `${minutes}:${seconds}`;\n};\n\nlet currentSessionLength = mToMS(store.getState().sessionLength);\nlet currentBreakLength = mToMS(store.getState().breakLength);\nlet currentTime = mToMS(store.getState().sessionLength);\nlet currentTimeLength = mToMS(store.getState().sessionLength);\nlet currentCountdownType = CountdownType.session;\nlet prevCounting = store.getState().counting;\nlet timer: NodeJS.Timeout;\nconst countStep = 10;\n\n\nconst Clock = () => {\n\n  const [, rerender] = useState(1);\n\n  useEffect(() => {\n    // listen to store updates on counting states\n    store.subscribe(() => {\n      const state = store.getState();\n      if (state.counting === Counting.reset) {\n        if (aRef.current) {\n          aRef.current.pause();\n          aRef.current.currentTime = 0;\n        }\n        currentSessionLength = currentTime = currentTimeLength = mToMS(state.sessionLength);\n        currentBreakLength = mToMS(state.breakLength);\n        rerender(currentTime);\n      } else if (state.counting === Counting.paused) {\n        if (mToMS(state.breakLength) !== currentBreakLength) {\n          currentBreakLength = mToMS(state.breakLength);\n          if (currentCountdownType === CountdownType.break) {\n            currentTimeLength = currentTime = currentBreakLength;\n          }\n        }\n        if (mToMS(state.sessionLength) !== currentSessionLength) {\n          currentSessionLength = mToMS(state.sessionLength);\n          if (currentCountdownType === CountdownType.session) {\n            currentTimeLength = currentTime = currentSessionLength;\n          }\n        }\n        rerender(currentTime);\n      }\n      // return if state didn't change\n      if (state.counting === prevCounting) return;\n\n      if (state.counting === Counting.started) {\n        // start the counting if the state === counting\n        timer = setInterval(() => {\n          currentTime -= countStep;\n          if (currentTime <= 0) {\n            aRef.current?.play().catch(err => console.log(err));\n            if (currentCountdownType === CountdownType.session) {\n              currentCountdownType = CountdownType.break;\n              currentTime = currentTimeLength = mToMS(state.breakLength);\n            } else {\n              currentCountdownType = CountdownType.session;\n              currentTime = currentTimeLength = mToMS(state.sessionLength);\n            }\n          }\n          rerender(currentTime);\n        }, countStep);\n      } else {\n        // stop the counting if the state\n        if (timer) clearInterval(timer);\n      }\n      prevCounting = state.counting;\n\n    });\n    const ctx = bgRef?.current?.getContext('2d');\n    if (ctx != null) {\n      drawBackground(ctx);\n      drawTicks(ctx);\n    }\n    const ctx2 = pRef.current?.getContext('2d');\n    if (ctx2 != null) {\n      drawPointer(ctx2, 0);\n    }\n  }, []);\n\n  useEffect(() => {\n    const ctx = pRef.current?.getContext('2d');\n    if (ctx != null) {\n      const percent = currentTime / currentTimeLength;\n      drawPointer(ctx, percent);\n    }\n  });\n\n  const bgRef = useRef<HTMLCanvasElement>(null);\n  const pRef = useRef<HTMLCanvasElement>(null);\n  const aRef = useRef<HTMLAudioElement>(null);\n\n  return (\n    <div id='clock-container'>\n      <canvas ref={bgRef} id='clock' width={`${CLOCK_LENGTH}px`} height={`${CLOCK_LENGTH}px`}/>\n      <span id='time-left'>{formatTime(currentTime)}</span>\n      <canvas ref={pRef} id='pointer' width={`${CLOCK_LENGTH}px`} height={`${CLOCK_LENGTH}px`}/>\n      <span id='timer-label'>{currentCountdownType === CountdownType.session ? 'session' : 'break'}</span>\n      <audio id='beep' ref={aRef}>\n        <source src={beep} type='audio/mp3'/>\n      </audio>\n    </div>\n  );\n};\n\nexport default Clock;\n\n","import {configureStore} from \"@reduxjs/toolkit\";\nimport rootReducer from './rootReducer'\n\nconst store = configureStore({\n  reducer: rootReducer,\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\n\nexport  default  store;","import {BACKGROUND_COLOR, CLOCK_LENGTH} from \"./Clock\";\n\nconst pLength = (percent: number) => CLOCK_LENGTH / 100 * percent;\n\nconst drawTicks = (ctx: CanvasRenderingContext2D) => {\n  ctx.beginPath();\n  ctx.strokeStyle = 'rgba(255, 255, 255, 0.5)';\n  const offset = pLength(9);\n  const tickHeight = pLength(2);\n  const tickNum = 100;\n  const rotationStep = Math.PI * 2 / tickNum;\n  for (let i = 0; i < tickNum; i++) {\n    ctx.moveTo(CLOCK_LENGTH / 2, offset);\n    ctx.lineTo(CLOCK_LENGTH / 2, offset + tickHeight);\n    ctx.translate(CLOCK_LENGTH / 2, CLOCK_LENGTH / 2);\n    ctx.rotate(rotationStep);\n    ctx.translate(-CLOCK_LENGTH / 2, -CLOCK_LENGTH / 2);\n  }\n  ctx.stroke();\n};\n\nconst drawBackground = (ctx: CanvasRenderingContext2D) => {\n  ctx.moveTo(CLOCK_LENGTH / 2, CLOCK_LENGTH / 2);\n\n  const drawCircle = (radius: number) => {\n    const whiteShadowOffset = -pLength(0.5);\n    const blackShadowOffset = pLength(2);\n\n    const drawArc = (radius: number) => {\n      ctx.arc(CLOCK_LENGTH / 2, CLOCK_LENGTH / 2, pLength(radius), 0, Math.PI * 2);\n    };\n\n    ctx.shadowBlur = 15;\n    ctx.fillStyle = BACKGROUND_COLOR;\n\n    ctx.beginPath();\n    ctx.shadowOffsetX = ctx.shadowOffsetY = blackShadowOffset;\n    ctx.shadowColor = 'rgba(0, 0, 0, 0.8)';\n    drawArc(radius);\n    ctx.fill();\n\n    ctx.beginPath();\n    ctx.shadowOffsetX = ctx.shadowOffsetY = whiteShadowOffset;\n    ctx.shadowColor = 'rgba(255, 255, 255, 0.2)';\n    drawArc(radius);\n    ctx.fill();\n\n\n  };\n\n  // draw outer circle\n  drawCircle(45);\n  // draw middle circle\n  drawCircle(35);\n\n  ctx.beginPath();\n  ctx.arc(CLOCK_LENGTH / 2, CLOCK_LENGTH / 2, pLength(25), 0, Math.PI * 2);\n  ctx.fillStyle = '#161719';\n  ctx.shadowOffsetX = 0;\n  ctx.shadowOffsetY = 0;\n  ctx.shadowColor = 'rgba(0,0,0,0.5)';\n  ctx.shadowBlur = 5;\n  ctx.fill();\n};\n\nconst drawPointer = (ctx: CanvasRenderingContext2D, rotationPercent: number) => {\n  if (ctx == null) return;\n  ctx.clearRect(0, 0, CLOCK_LENGTH, CLOCK_LENGTH);\n\n  ctx.save();\n  ctx.translate(CLOCK_LENGTH / 2, CLOCK_LENGTH / 2);\n  ctx.rotate(-Math.PI * 2 * rotationPercent);\n  ctx.translate(-CLOCK_LENGTH / 2, -CLOCK_LENGTH / 2);\n\n\n  ctx.shadowColor = 'transparent';\n  const pointerRadius = pLength(2);\n  const pink = 'rgb(211, 105, 190)';\n  const lightPink = 'rgb(209, 133, 194)';\n  const centerX = CLOCK_LENGTH / 2;\n  const centerY = pLength(15);\n\n  ctx.beginPath();\n  ctx.arc(centerX, centerY, pointerRadius, 0, Math.PI * 2);\n  ctx.fillStyle = pink;\n  ctx.fill();\n\n  ctx.beginPath();\n  const pointerGrad = ctx.createLinearGradient(\n    centerX - pointerRadius, centerY, centerX + pointerRadius, centerY\n  );\n  pointerGrad.addColorStop(0, pink);\n  pointerGrad.addColorStop(0.5, pink);\n  pointerGrad.addColorStop(1, lightPink);\n  ctx.fillStyle = pointerGrad;\n  ctx.arc(centerX, centerY, pointerRadius, 0, Math.PI * 2);\n  ctx.fill();\n  ctx.restore();\n};\n\nexport {drawBackground, drawTicks, drawPointer};","export default __webpack_public_path__ + \"static/media/beep.a21d0d20.mp3\";","import './Button.scss';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {RootState} from \"../../store/store\";\nimport {Counting, pause, reset, start} from '../../store/rootReducer';\n\nconst Buttons = () => {\n  const counting = useSelector((state: RootState) => state.counting);\n  const dispatch = useDispatch();\n\n  const toggle = () => {\n    if (counting === Counting.started)\n      dispatch(pause());\n    else\n      dispatch(start());\n  };\n\n  const resetTimer = () => {\n    dispatch(reset());\n  };\n\n  return (\n    <div id='buttons'>\n      <Button id='start_stop' label='START' color='#7A63FC' active={counting === Counting.started} onClick={toggle}/>\n      <Button id='reset' label='RESET' color='#E44B4C' onClick={resetTimer}/>\n    </div>\n  );\n};\n\ntype ButtonProps = {\n  label: string,\n  onClick: () => void,\n  color?: string,\n  active?: boolean,\n  id: string,\n}\n\nconst Button = ({id, label, color = 'white', active = false, onClick}: ButtonProps) => {\n  return (\n    <button\n      id={id}\n      style={{color}}\n      className={`nice-button ${active ? 'active' : ''}`}\n      onClick={onClick}\n    >\n      {label}\n    </button>\n  );\n};\n\nexport default Buttons;","import './Card.scss';\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faAngleDown, faAngleUp} from \"@fortawesome/free-solid-svg-icons\";\nimport {shallowEqual, useDispatch, useSelector} from \"react-redux\";\nimport {RootState} from \"../../store/store\";\nimport {\n  decrementBreakLength,\n  decrementSessionLength,\n  incrementBreakLength,\n  incrementSessionLength\n} from '../../store/rootReducer';\n\nconst Cards = () => {\n  const incBL = () => {\n    dispatch(incrementBreakLength());\n  };\n\n  const decBL = () => {\n    dispatch(decrementBreakLength());\n  };\n\n  const incSL = () => {\n    dispatch(incrementSessionLength());\n  };\n\n  const decSL = () => {\n    dispatch(decrementSessionLength());\n  };\n\n  const {breakLength, sessionLength} = useSelector((state: RootState) => ({\n    breakLength: state.breakLength, sessionLength: state.sessionLength,\n  }), shallowEqual);\n  const dispatch = useDispatch();\n\n  return (\n    <div id='cards'>\n      <Card id='break' title='BREAK LENGTH' subtitle={`${breakLength}`} onClickDown={decBL} onClickUp={incBL}/>\n      <Card id='session' title='SESSION LENGTH' subtitle={`${sessionLength}`} onClickDown={decSL} onClickUp={incSL}/>\n    </div>\n  );\n};\n\ntype CardProps = {\n  title: string,\n  subtitle: string,\n  onClickUp: () => void,\n  onClickDown: () => void,\n  id: string,\n};\n\nconst Card = (props: CardProps) => {\n\n  return (\n    <div className='card'>\n      <div id={props.id + '-label'} className='title'>{props.title}</div>\n      <div id={props.id + '-length'} className='subtitle'>{props.subtitle}</div>\n      <div className='card-buttons'>\n        <FontAwesomeIcon id={props.id + '-increment'} className='card-button' icon={faAngleUp}\n                         onClick={props.onClickUp}/>\n        <FontAwesomeIcon id={props.id + '-decrement'} className='card-button' icon={faAngleDown}\n                         onClick={props.onClickDown}/>\n      </div>\n    </div>\n  );\n};\n\nexport default Cards;","import './App.scss';\nimport Clock from \"../features/clock/Clock\";\nimport Buttons from \"../features/clock/Button\";\nimport Cards from \"../features/clock/Card\";\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Clock/>\n      <Cards/>\n      <Buttons/>\n      <div id='font-loader'>.</div>\n    </div>\n  );\n}\n\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './app/App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport store from \"./store/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App/>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nconst setHeight = async () => {\n  const doc = document.documentElement;\n  const height = doc.clientHeight;\n  const width = window.innerWidth;\n  console.log(width, height);\n  const vh = height / 100;\n  doc.style.setProperty('--vh', `${vh}px`);\n  console.log(vh);\n};\n\n//window.addEventListener('resize', setHeight);\nwindow.addEventListener('resize', setHeight);\n\nsetHeight();\n\nconst lol = () => {\n  let mobile_timer: NodeJS.Timeout;\n\n  const viewport = document.getElementById('viewport');\n  if (viewport == null) return;\n\n  if (navigator.userAgent.match(/iPhone/i)) {\n    viewport.setAttribute('content', 'width=device-width,minimum-scale=1.0,maximum-scale=1.0,initial-scale=1.0');\n    window.addEventListener('gesturestart', function () {\n      clearTimeout(mobile_timer);\n      viewport.setAttribute('content', 'width=device-width,minimum-scale=1.0,maximum-scale=10.0');\n    }, false);\n    window.addEventListener('touchend', function () {\n      clearTimeout(mobile_timer);\n      mobile_timer = setTimeout(function () {\n        viewport.setAttribute('content', 'width=device-width,minimum-scale=1.0,maximum-scale=1.0,initial-scale=1.0');\n      }, 1000);\n    }, false);\n  }\n};\n\nwindow.onload = lol;\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}